parameters:
  buildMatrixType: platformDependencyGraph
  testMatrixType: platformVersionedOs
  customBuildLegGrouping: ""
  
  linuxAmdBuildJobTimeout: 60
  linuxArmBuildJobTimeout: 60
  windowsAmdBuildJobTimeout: 60
  windowsArmBuildJobTimeout: 60

  linuxAmdTestJobTimeout: 60
  linuxArmTestJobTimeout: 60
  windowsAmdTestJobTimeout: 60
  windowsArmTestJobTimeout: 60

stages:

################################################################################
# Build Images
################################################################################
- stage: Build
  condition: and(succeeded(), or(eq(variables['singlePhase'], ''), eq(variables['singlePhase'], 'build')))
  jobs:
  - template: ../jobs/generate-matrix.yml
    parameters:
      matrixType: ${{ parameters.buildMatrixType }}
      name: GenerateBuildMatrix
      customBuildLegGrouping: ${{ parameters.customBuildLegGrouping }}

  - template: ../jobs/build-images.yml
    parameters:
      name: Build_Linux_amd64
      pool: # linuxAmd64Pool
        name: Hosted Ubuntu 1604
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixLinuxAmd64', parameters.buildMatrixType) }}']
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_Linux_arm64v8
      pool: # linuxArm64v8Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands:
        - agent.os -equals linux
        - RemoteDockerServerOS -equals linux
        - RemoteDockerServerArch -equals aarch64
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixLinuxArm64v8', parameters.buildMatrixType) }}']
      useRemoteDockerServer: true
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxArmBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_Linux_arm32v7
      pool: # linuxArm32v7Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands:
        - agent.os -equals linux
        - RemoteDockerServerOS -equals linux
        - RemoteDockerServerArch -equals aarch64
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixLinuxArm32v7', parameters.buildMatrixType) }}']
      useRemoteDockerServer: true
      dockerClientOS: linux
      buildJobTimeout: ${{ parameters.linuxArmBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_NanoServer1803_amd64
      pool: # windows1803Amd64Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixNanoserver1803Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_NanoServer1809_amd64
      pool: # windows1809Amd64
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixNanoserver1809Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_NanoServer1809_arm32
      pool: # nanoServer1809Arm32Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands:
        - agent.os -equals linux
        - RemoteDockerServerOS -equals nanoserver-1809
        - RemoteDockerServerArch -equals arm32
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixNanoserver1809Arm32', parameters.buildMatrixType) }}']
      dockerClientOS: linux
      useRemoteDockerServer: true
      buildJobTimeout: ${{ parameters.windowsArmBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_NanoServer1903_amd64
      pool: # windows1903Amd64
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2019_Data_Center_1903
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixNanoserver1903Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_WindowsServerCoreLtsc2016_amd64
      pool: # windows1607Amd64Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2016_Data_Center_with_Containers
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixWindowsservercoreLtsc2016Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_WindowsServerCore1803_amd64
      pool: # windows1803Amd64Pool
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2016_Data_Center_RS4
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixWindowsservercore1803Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_WindowsServerCoreLtsc2019_amd64
      pool: # windows1809Amd64
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2019_Data_Center_RS5
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixWindowsservercoreLtsc2019Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}
  - template: ../jobs/build-images.yml
    parameters:
      name: Build_WindowsServerCore1903_amd64
      pool: # windows1903Amd64
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          name: DotNetCore-Docker-Public
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          name: DotNetCore-Docker
        demands: VSTS_OS -equals Windows_Server_2019_Data_Center_1903
      matrix: dependencies.GenerateBuildMatrix.outputs['${{ format('matrix.{0}MatrixWindowsservercore1903Amd64', parameters.buildMatrixType) }}']
      dockerClientOS: windows
      buildJobTimeout: ${{ parameters.windowsAmdBuildJobTimeout }}

